{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\components\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './styles/Projects.css';\nimport Project from './Project';\nimport ProjectTotal from './ProjectTotal';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = ({\n  projects,\n  onDelete,\n  props\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getProjectsQuery, {\n    variables: {\n      id: projects.id\n    }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!data || !data.projects) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Project not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"list-title\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-projects-msg\",\n      children: \"No projects yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 77\n    }, this), projects.map((project, index) => /*#__PURE__*/_jsxDEV(Project, {\n      project: project,\n      onDelete: onDelete\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 48\n    }, this)), /*#__PURE__*/_jsxDEV(ProjectTotal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/components/Projects.js"],"names":["React","Project","ProjectTotal","useQuery","gql","Projects","projects","onDelete","props","loading","error","data","getProjectsQuery","variables","id","length","map","project","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAmC;AAAA;;AAEhD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACS,gBAAD,EAAmB;AACxDC,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAER,QAAQ,CAACQ;AADN;AAD6C,GAAnB,CAAzC;;AAMA,MAAIL,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIC,KAAJ,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAG,CAACC,IAAD,IAAS,CAACA,IAAI,CAACL,QAAlB,EAA4B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,eACKA,QAAQ,CAACS,MAAT,GAAkB,CAAlB,gBAAsB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,gBAA+D;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADpE,EAEKT,QAAQ,CAACU,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBAAqB,QAAC,OAAD;AAAqB,MAAA,OAAO,EAAED,OAA9B;AAAuC,MAAA,QAAQ,EAAEV;AAAjD,OAAcW,KAAd;AAAA;AAAA;AAAA;AAAA,YAAlC,CAFL,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;GAAMb,Q;UAE+BF,Q;;;KAF/BE,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport './styles/Projects.css';\r\nimport Project from './Project';\r\nimport ProjectTotal from './ProjectTotal';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst Projects = ({ projects, onDelete, props }) => {\r\n\r\n    const { loading, error, data } = useQuery(getProjectsQuery, {\r\n        variables: {\r\n            id: projects.id,\r\n        },\r\n    });\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    if (error) {\r\n        return <p>Error!</p>\r\n    }\r\n\r\n    if(!data || !data.projects) {\r\n        return <p>Project not found</p>\r\n    }\r\n    return (\r\n        <div>\r\n            {projects.length > 0 ? <p className=\"list-title\">Projects</p> : <p className=\"no-projects-msg\">No projects yet</p>}\r\n            {projects.map((project, index) => (<Project key={index} project={project} onDelete={onDelete} />))}\r\n            <ProjectTotal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n"]},"metadata":{},"sourceType":"module"}