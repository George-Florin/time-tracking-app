{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\components\\\\ProjectPage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from 'react';\nimport React from 'react';\nimport './styles/ProjectPage.css';\nimport TimeForm from './TimeForm';\nimport Times from './Times';\nimport TimeContext from '../Context/TimeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectPage = ({\n  project,\n  match\n}) => {\n  _s();\n\n  const {\n    params: {\n      id\n    }\n  } = match;\n  const {\n    time,\n    setTime\n  } = useContext(TimeContext);\n  useEffect(() => {\n    const getTimes = async () => {\n      const timesFromServer = await fetchTimes();\n      setTime(timesFromServer);\n    };\n\n    getTimes();\n  }, []); // Fetch Times\n\n  const fetchTimes = async () => {\n    const res = await fetch('http://localhost:5000/times');\n    const data = await res.json();\n    return data;\n  }; // Add time\n\n\n  const addTime = async time => {\n    const res = await fetch('http://localhost:5000/times', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(time)\n    });\n    const data = await res.json();\n    setTimes([...times, data]); //    const id = Math.floor(Math.random * 10000) + 1\n    //    const newTime = { id, ...time }\n    //    setTimes([...times, newTime])\n  }; // Delete time\n\n\n  const deleteTime = async id => {\n    await fetch(`http://localhost:5000/times/${id}`, {\n      method: 'DELETE'\n    });\n    setTimes(times.filter(time => time.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-project\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Title test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project 1 description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Times, {\n      times: times,\n      onDelete: deleteTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TimeForm, {\n      onAdd: addTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectPage, \"L/gkAIsElX7EIOZf8Ey0H3emMmY=\");\n\n_c = ProjectPage;\nexport default ProjectPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/components/ProjectPage.js"],"names":["useEffect","useContext","React","TimeForm","Times","TimeContext","ProjectPage","project","match","params","id","time","setTime","getTimes","timesFromServer","fetchTimes","res","fetch","data","json","addTime","method","headers","body","JSON","stringify","setTimes","times","deleteTime","filter"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAAA;;AACvC,QAAM;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA;AAAD;AAAT,MAAiBF,KAAvB;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBX,UAAU,CAACI,WAAD,CAAlC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzB,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,OAAO,CAACE,eAAD,CAAP;AACH,KAHD;;AAKDD,IAAAA,QAAQ;AACV,GAPQ,EAON,EAPM,CAAT,CAJuC,CAa3C;;AACA,QAAME,UAAU,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACH,GALD,CAd2C,CAqB3C;;;AACA,QAAME,OAAO,GAAG,MAAOT,IAAP,IAAgB;AAC5B,UAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACnDI,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP,OAF0C;AAKnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf;AAL6C,KAAhC,CAAvB;AAQA,UAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAO,IAAAA,QAAQ,CAAC,CAAC,GAAGC,KAAJ,EAAWT,IAAX,CAAD,CAAR,CAX4B,CAahC;AACA;AACA;AACC,GAhBD,CAtB2C,CAwC3C;;;AACA,QAAMU,UAAU,GAAG,MAAOlB,EAAP,IAAc;AAC7B,UAAMO,KAAK,CAAE,+BAA8BP,EAAG,EAAnC,EAAsC;AAC7CW,MAAAA,MAAM,EAAE;AADqC,KAAtC,CAAX;AAIAK,IAAAA,QAAQ,CAACC,KAAK,CAACE,MAAN,CAAclB,IAAD,IAAUA,IAAI,CAACD,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACH,GAND;;AAQI,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEiB,KAAd;AAAqB,MAAA,QAAQ,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,QAAD;AAAU,MAAA,KAAK,EAAER;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzDD;;GAAMd,W;;KAAAA,W;AA2DN,eAAeA,WAAf","sourcesContent":["import { useEffect, useContext } from 'react';\r\nimport React from 'react';\r\nimport './styles/ProjectPage.css';\r\nimport TimeForm from './TimeForm';\r\nimport Times from './Times';\r\nimport TimeContext from '../Context/TimeContext';\r\n\r\nconst ProjectPage = ({ project, match}) => {\r\n    const {params: {id}} = match\r\n    const {time, setTime} = useContext(TimeContext)\r\n\r\n    useEffect(() => {\r\n        const getTimes = async () => {\r\n            const timesFromServer = await fetchTimes()\r\n            setTime(timesFromServer)\r\n        }\r\n\r\n       getTimes()\r\n    }, [])\r\n\r\n// Fetch Times\r\nconst fetchTimes = async () => {\r\n    const res = await fetch('http://localhost:5000/times')\r\n    const data = await res.json()\r\n\r\n    return data\r\n} \r\n\r\n// Add time\r\nconst addTime = async (time) => {\r\n    const res = await fetch('http://localhost:5000/times', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(time)\r\n    })\r\n    \r\n    const data = await res.json()\r\n\r\n    setTimes([...times, data])\r\n    \r\n//    const id = Math.floor(Math.random * 10000) + 1\r\n//    const newTime = { id, ...time }\r\n//    setTimes([...times, newTime])\r\n}\r\n\r\n// Delete time\r\nconst deleteTime = async (id) => {\r\n    await fetch(`http://localhost:5000/times/${id}`, {\r\n        method: 'DELETE',\r\n    })\r\n\r\n    setTimes(times.filter((time) => time.id !== id))\r\n}\r\n\r\n    return (\r\n        <div className=\"single-project\">\r\n            <h1>Title test</h1>\r\n            <h2>Project 1 description</h2>\r\n            <Times times={times} onDelete={deleteTime}/>\r\n            <TimeForm onAdd={addTime}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectPage"]},"metadata":{},"sourceType":"module"}