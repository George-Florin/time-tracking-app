{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useContext } from \"react\";\nimport React from 'react';\nimport './styles/Main.css';\nimport Projects from './Projects';\nimport Form from './Form';\nimport MyContext from \"../Context/Context\";\nimport { gql, useMutation } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const {\n    projects,\n    setProjects\n  } = useContext(MyContext);\n  const [mutateFunction, {\n    data,\n    loading,\n    error\n  }] = useMutation(GET_PROJECTS);\n  console.log(projects);\n  useEffect(() => {\n    const getProjects = async () => {\n      const projectsFromServer = await fetchProjects();\n      setProjects(projectsFromServer);\n    };\n\n    getProjects();\n  }, []); // Define mutation\n\n  const GET_PROJECTS = gql`\n  # Increments a back-end counter and gets its resulting value\n  mutation getProjects {\n    Projects\n  }\n`; // Fetch Projects\n\n  const fetchProjects = async () => {\n    const res = await fetch('http://localhost:4000');\n    const data = await res.json();\n    return data;\n  }; // Add project\n\n\n  const addProject = async project => {\n    const res = await fetch('http://localhost:4000', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    });\n    const data = await res.json();\n    setProjects([...projects, data]); //  const id = Math.floor(Math.random() * 10000) + 1\n    //  const newProject =  { id, ...project }\n    //  setProjects([...projects, newProject])\n  }; // Edit project\n  //const editProject = (id) => {\n  //console.log(id)\n  //}\n  // Delete project\n\n\n  const deleteProject = async id => {\n    await fetch(`http://localhost:4000/${id}`, {\n      method: 'DELETE'\n    });\n    setProjects(projects.filter(project => project.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onAdd: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Projects, {\n      projects: projects,\n      onDelete: deleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"7vJ+KWAY0sTm9FxEDkRvI18g3WU=\", false, function () {\n  return [useMutation];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/components/Main.js"],"names":["useEffect","useContext","React","Projects","Form","MyContext","gql","useMutation","Main","projects","setProjects","mutateFunction","data","loading","error","GET_PROJECTS","console","log","getProjects","projectsFromServer","fetchProjects","res","fetch","json","addProject","project","method","headers","body","JSON","stringify","deleteProject","id","filter"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BT,UAAU,CAACI,SAAD,CAA1C;AACA,QAAM,CAACM,cAAD,EAAiB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAjB,IAA6CP,WAAW,CAACQ,YAAD,CAA9D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,WAAW,GAAG,YAAY;AAC9B,YAAMC,kBAAkB,GAAG,MAAMC,aAAa,EAA9C;AACAV,MAAAA,WAAW,CAACS,kBAAD,CAAX;AACD,KAHD;;AAKAD,IAAAA,WAAW;AACZ,GAPQ,EAON,EAPM,CAAT,CANiB,CAenB;;AACA,QAAMH,YAAY,GAAGT,GAAI;AACzB;AACA;AACA;AACA;AACA,CALA,CAhBmB,CAwBnB;;AACA,QAAMc,aAAa,GAAG,YAAY;AAChC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uBAAD,CAAvB;AACA,UAAMV,IAAI,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAnB;AAEA,WAAOX,IAAP;AACD,GALD,CAzBmB,CAgCnB;;;AACA,QAAMY,UAAU,GAAG,MAAOC,OAAP,IAAmB;AACpC,UAAMJ,GAAG,GAAG,MAAMC,KAAK,CAAE,uBAAF,EAA2B;AAChDI,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuC;AAKhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAL0C,KAA3B,CAAvB;AAQA,UAAMb,IAAI,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAnB;AAEAb,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,IAAd,CAAD,CAAX,CAXoC,CAatC;AACA;AACA;AACC,GAhBD,CAjCmB,CAmDnB;AACA;AACE;AACF;AAEA;;;AACA,QAAMmB,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClC,UAAMV,KAAK,CAAE,yBAAwBU,EAAG,EAA7B,EAAgC;AACzCN,MAAAA,MAAM,EAAE;AADiC,KAAhC,CAAX;AAIAhB,IAAAA,WAAW,CAACD,QAAQ,CAACwB,MAAT,CAAiBR,OAAD,IAAaA,OAAO,CAACO,EAAR,KAAeA,EAA5C,CAAD,CAAX;AACD,GAND;;AAQE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAER;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEf,QAApB;AAA8B,MAAA,QAAQ,EAAEsB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvED;;GAAMvB,I;UAE+CD,W;;;KAF/CC,I;AAyEN,eAAeA,IAAf","sourcesContent":["import { useEffect, useContext } from \"react\";\r\nimport React from 'react';\r\nimport './styles/Main.css'\r\nimport Projects from './Projects'\r\nimport Form from './Form'\r\nimport MyContext from \"../Context/Context\";\r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\nconst Main = () => {\r\n  const {projects, setProjects} = useContext(MyContext)\r\n  const [mutateFunction, { data, loading, error }] = useMutation(GET_PROJECTS);\r\n\r\n  console.log(projects)\r\n\r\n  useEffect(() => {\r\n    const getProjects = async () => {\r\n      const projectsFromServer = await fetchProjects()\r\n      setProjects(projectsFromServer)\r\n    }\r\n\r\n    getProjects()\r\n  }, [])\r\n\r\n// Define mutation\r\nconst GET_PROJECTS = gql`\r\n  # Increments a back-end counter and gets its resulting value\r\n  mutation getProjects {\r\n    Projects\r\n  }\r\n`;  \r\n\r\n\r\n// Fetch Projects\r\nconst fetchProjects = async () => {\r\n  const res = await fetch('http://localhost:4000')\r\n  const data = await res.json()\r\n\r\n  return data\r\n}\r\n\r\n// Add project\r\nconst addProject = async (project) => {\r\n  const res = await fetch ('http://localhost:4000', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(project)\r\n  })\r\n\r\n  const data = await res.json()\r\n\r\n  setProjects([...projects, data])\r\n\r\n//  const id = Math.floor(Math.random() * 10000) + 1\r\n//  const newProject =  { id, ...project }\r\n//  setProjects([...projects, newProject])\r\n}\r\n\r\n// Edit project\r\n//const editProject = (id) => {\r\n  //console.log(id)\r\n//}\r\n\r\n// Delete project\r\nconst deleteProject = async (id) => {\r\n  await fetch(`http://localhost:4000/${id}`, {\r\n    method: 'DELETE'\r\n  })\r\n\r\n  setProjects(projects.filter((project) => project.id !== id))\r\n}\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n        <Form onAdd={addProject}/>\r\n        <Projects projects={projects} onDelete={deleteProject}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}