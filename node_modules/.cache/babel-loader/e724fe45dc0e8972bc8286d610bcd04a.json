{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\components\\\\Project.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles/Project.css';\nimport { FaTrash, FaEye, FaRedo } from 'react-icons/fa';\nimport { Link } from \"react-router-dom\";\nimport EdiText from 'react-editext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = ({\n  project,\n  onDelete\n}) => {\n  _s();\n\n  const [title, setTitle] = useLocalStorage(\"\");\n  const [description, setDescription] = useLocalStorage(\"\");\n\n  const handleSave = val => {\n    console.log('Edited value ->', val);\n    setTitle(val);\n  };\n\n  const handleEdit = val => {\n    console.log('Edited value ->', val);\n    setDescription(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-component\",\n      children: [/*#__PURE__*/_jsxDEV(EdiText, {\n        type: \"text\",\n        className: \"project-title\",\n        value: title,\n        onSave: handleSave,\n        onChange: e => setTitle(e.target.title),\n        showButtonsOnHover: true,\n        submitOnUnfocus: true,\n        cancelOnUnfocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EdiText, {\n        type: \"textarea\",\n        className: \"project-description\",\n        value: description,\n        onSave: handleEdit,\n        onChange: e => setDescription(e.target.description),\n        showButtonsOnHover: true,\n        submitOnUnfocus: true,\n        cancelOnUnfocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/projectpage/${project.id}`,\n        className: \"view-icon\",\n        children: /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FaTrash, {\n        className: \"delete-icon\",\n        onClick: () => onDelete(project.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}; // Hook\n\n\n_s(Project, \"NrDIYScbKN+Umq3rYdsj4UuMPXA=\", false, function () {\n  return [useLocalStorage, useLocalStorage];\n});\n\n_c = Project;\n\nfunction useLocalStorage(key, initialValue) {\n  _s2();\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  }); // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n      setStoredValue(valueToStore); // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n_s2(useLocalStorage, \"+V6MHBu6i/5rq6qoIqnMZeR/gRU=\");\n\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/components/Project.js"],"names":["React","useState","FaTrash","FaEye","FaRedo","Link","EdiText","Project","project","onDelete","title","setTitle","useLocalStorage","description","setDescription","handleSave","val","console","log","handleEdit","e","target","id","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\r\nimport './styles/Project.css';\r\nimport { FaTrash, FaEye, FaRedo} from 'react-icons/fa';\r\nimport { Link } from \"react-router-dom\";\r\nimport EdiText from 'react-editext';\r\n\r\n\r\nconst Project = ({ project, onDelete}) => {\r\n    const [title, setTitle] = useLocalStorage(\"\")\r\n    const [description, setDescription] = useLocalStorage(\"\")\r\n\r\n    const handleSave = (val) => {\r\n        console.log('Edited value ->', val);\r\n        setTitle(val);\r\n    } \r\n\r\n    const handleEdit = (val) => {\r\n      console.log('Edited value ->', val);\r\n      setDescription(val);\r\n  } \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"project-component\">\r\n                    <EdiText \r\n                    type=\"text\" \r\n                    className=\"project-title\" \r\n                    value={title} \r\n                    onSave={handleSave} \r\n                    onChange={(e) => setTitle(e.target.title)}\r\n                    showButtonsOnHover\r\n                    submitOnUnfocus\r\n                    cancelOnUnfocus\r\n                    />\r\n                    <br/>\r\n                    <EdiText \r\n                    type=\"textarea\" \r\n                    className=\"project-description\" \r\n                    value={description} \r\n                    onSave={handleEdit} \r\n                    onChange={(e) => setDescription(e.target.description)}\r\n                    showButtonsOnHover\r\n                    submitOnUnfocus\r\n                    cancelOnUnfocus\r\n                    />\r\n                    <Link to={`/projectpage/${project.id}`} className=\"view-icon\"><FaEye/></Link>\r\n                    <FaTrash className=\"delete-icon\" onClick={() => onDelete(project.id)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}