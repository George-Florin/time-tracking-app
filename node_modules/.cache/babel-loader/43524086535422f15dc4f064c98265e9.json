{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\components\\\\Projects.js\";\nimport React from 'react';\nimport './styles/Projects.css';\nimport Project from './Project';\nimport ProjectTotal from './ProjectTotal';\nimport { useQuery, gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getProjectQuery = gql`\n    query project($id: ID) {\n        project(id: $id) {\n            id\n            title\n            description\n        }\n    }`;\n\nconst Projects = ({\n  projects,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"list-title\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-projects-msg\",\n      children: \"No projects yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 77\n    }, this), projects.map((project, index) => /*#__PURE__*/_jsxDEV(Project, {\n      project: project,\n      onDelete: onDelete\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 48\n    }, this)), /*#__PURE__*/_jsxDEV(ProjectTotal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/components/Projects.js"],"names":["React","Project","ProjectTotal","useQuery","gql","getProjectQuery","Projects","projects","onDelete","length","map","project","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAGA,MAAMC,eAAe,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,MAPA;;AAQA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACzC,sBACI;AAAA,eACKD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,gBAAsB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,gBAA+D;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADpE,EAEKF,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,kBAAqB,QAAC,OAAD;AAAqB,MAAA,OAAO,EAAED,OAA9B;AAAuC,MAAA,QAAQ,EAAEH;AAAjD,OAAcI,KAAd;AAAA;AAAA;AAAA;AAAA,YAAlC,CAFL,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CARD;;KAAMN,Q;AAUN,eAAeA,QAAf","sourcesContent":["import React from 'react'\r\nimport './styles/Projects.css';\r\nimport Project from './Project';\r\nimport ProjectTotal from './ProjectTotal';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\n\r\nconst getProjectQuery = gql`\r\n    query project($id: ID) {\r\n        project(id: $id) {\r\n            id\r\n            title\r\n            description\r\n        }\r\n    }`\r\nconst Projects = ({ projects, onDelete }) => {\r\n    return (\r\n        <div>\r\n            {projects.length > 0 ? <p className=\"list-title\">Projects</p> : <p className=\"no-projects-msg\">No projects yet</p>}\r\n            {projects.map((project, index) => (<Project key={index} project={project} onDelete={onDelete} />))}\r\n            <ProjectTotal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n"]},"metadata":{},"sourceType":"module"}