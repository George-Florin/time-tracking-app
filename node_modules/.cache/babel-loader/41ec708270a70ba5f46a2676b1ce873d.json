{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { render } from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n      query getProjects{\n        projects {\n          title\n        }\n      }\n      `\n}).then(result => console.log(result));\nrender( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nconst getProjects = gql`\n  query getProjects {\n    projects {\n      title\n      description\n    }\n  }\n`; // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/index.js"],"names":["React","ReactDOM","App","render","reportWebVitals","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","client","uri","cache","query","then","result","console","log","document","getElementById","getProjects"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;;AASA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE,wBADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;AAKAI,MAAM,CACHG,KADH,CACS;AACLA,EAAAA,KAAK,EAAEJ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AAPS,CADT,EAUGK,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;AAYAZ,MAAM,eACJ,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEO,MAAxB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADI,EAIJQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJI,CAAN;AAOA,MAAMC,WAAW,GAAGX,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA,C,CASA;AACA;AACA;;AACAL,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {render} from 'react-dom'\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\",\n  cache: new InMemoryCache()\n})\n\nclient\n  .query({\n    query: gql`\n      query getProjects{\n        projects {\n          title\n        }\n      }\n      `\n  })\n  .then(result => console.log(result));\n\nrender(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\nconst getProjects = gql`\n  query getProjects {\n    projects {\n      title\n      description\n    }\n  }\n`;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}