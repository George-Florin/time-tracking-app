{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\App.js\";\nimport './App.css';\nimport ProjectPage from './components/ProjectPage';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MyContext, { DefaultState, MyContextProvider } from './Context/Context';\nimport TimeContext, { TimeContextProvider } from './Context/TimeContext';\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\";\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n      query GetProjects {\n        projects(title: \"test\") {\n          projects\n        }\n      }\n    `\n}).then(result => console.log(result));\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(MyContextProvider, {\n    children: /*#__PURE__*/_jsxDEV(TimeContextProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/projectpage/:id\",\n            exact: true,\n            component: ProjectPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nrender( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nconst PROJECTS = gql`\n  query GetProjects {\n    projects{\n      title\n      description\n    }\n  }\n`;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/App.js"],"names":["ProjectPage","Main","Navbar","BrowserRouter","Router","Switch","Route","MyContext","DefaultState","MyContextProvider","TimeContext","TimeContextProvider","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","render","client","uri","cache","query","then","result","console","log","App","document","getElementById","PROJECTS"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,SAAP,IAAoBC,YAApB,EAAkCC,iBAAlC,QAA2D,mBAA3D;AACA,OAAOC,WAAP,IAAsBC,mBAAtB,QAAiD,uBAAjD;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP;AAOA,SAASC,MAAT,QAAuB,wBAAvB;;AAGA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,GAAG,EAAE,wBADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIP,aAAJ;AAFuB,CAAjB,CAAf;AAKAK,MAAM,CACHG,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AAPS,CADT,EAUGM,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;;AAYA,SAASG,GAAT,GAAe;AACb,sBAEE,QAAC,iBAAD;AAAA,2BACE,QAAC,mBAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,MAAD;AAAA,kCACG,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,kBAAZ;AAAgC,YAAA,KAAK,MAArC;AAAsC,YAAA,SAAS,EAAE1B;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAcD;;KAfQyB,G;AAiBTT,MAAM,eACJ,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEC,MAAxB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADI,EAIJS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJI,CAAN;AAOA,MAAMC,QAAQ,GAAGb,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAUA,eAAeU,GAAf","sourcesContent":["import './App.css';\nimport ProjectPage from './components/ProjectPage';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport MyContext, { DefaultState, MyContextProvider } from './Context/Context';\nimport TimeContext, { TimeContextProvider } from './Context/TimeContext';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport { render } from '@testing-library/react';\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/',\n  cache: new InMemoryCache()\n});\n\nclient\n  .query({\n    query: gql`\n      query GetProjects {\n        projects(title: \"test\") {\n          projects\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\nfunction App() {\n  return (\n\n    <MyContextProvider>\n      <TimeContextProvider>\n        <Router>\n          <Navbar />\n            <Switch>\n               <Route path=\"/projectpage/:id\"  exact component={ProjectPage} />\n               <Route path=\"/\" exact component={Main} />\n            </Switch>\n        </Router>\n      </TimeContextProvider>\n   </MyContextProvider>\n)\n}\n\nrender(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n)\n\nconst PROJECTS = gql`\n  query GetProjects {\n    projects{\n      title\n      description\n    }\n  }\n`;\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}