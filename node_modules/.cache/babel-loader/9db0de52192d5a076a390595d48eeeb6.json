{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\time-tracking-app\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, createContext } from \"react\";\nimport React from 'react';\nimport './styles/Main.css';\nimport Projects from './Projects';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext({\n  projects: [],\n  project: null\n});\n\nconst Main = () => {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const getProjects = async () => {\n      const projectsFromServer = await fetchProjects();\n      setProjects(projectsFromServer);\n    };\n\n    getProjects();\n  }, []); // Fetch Projects\n\n  const fetchProjects = async () => {\n    const res = await fetch('http://localhost:5000/projects');\n    const data = await res.json();\n    return data;\n  }; // Add project\n\n\n  const addProject = async project => {\n    const res = await fetch('http://localhost:5000/projects', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(project)\n    });\n    const data = await res.json();\n    setProjects([...projects, data]); //  const id = Math.floor(Math.random() * 10000) + 1\n    //  const newProject =  { id, ...project }\n    //  setProjects([...projects, newProject])\n  }; // Edit project\n\n\n  const editProject = project => {\n    console.log(\"edit\", project);\n  }; // Delete project\n\n\n  const deleteProject = async id => {\n    await fetch(`http://localhost:5000/projects/${id}`, {\n      method: 'DELETE'\n    });\n    setProjects(projects.filter(project => project.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onAdd: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Projects, {\n      projects: projects,\n      onDelete: deleteProject,\n      onChange: editProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/User/Documents/Projects/time-tracking-app/src/components/Main.js"],"names":["useState","useEffect","createContext","React","Projects","Form","MyContext","projects","project","Main","setProjects","getProjects","projectsFromServer","fetchProjects","res","fetch","data","json","addProject","method","headers","body","JSON","stringify","editProject","console","log","deleteProject","id","filter"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,SAAS,gBAAGJ,aAAa,CAAC;AAACK,EAAAA,QAAQ,EAAC,EAAV;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAAD,CAA/B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACF,QAAD,EAAWG,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAG,YAAY;AAC9B,YAAMC,kBAAkB,GAAG,MAAMC,aAAa,EAA9C;AACAH,MAAAA,WAAW,CAACE,kBAAD,CAAX;AACD,KAHD;;AAKAD,IAAAA,WAAW;AACZ,GAPQ,EAON,EAPM,CAAT,CAHiB,CAYnB;;AACA,QAAME,aAAa,GAAG,YAAY;AAChC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AACD,GALD,CAbmB,CAoBnB;;;AACA,QAAME,UAAU,GAAG,MAAOV,OAAP,IAAmB;AACpC,UAAMM,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAAF,EAAoC;AACzDI,MAAAA,MAAM,EAAE,MADiD;AAEzDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgD;AAKzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,OAAf;AALmD,KAApC,CAAvB;AAQA,UAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAP,IAAAA,WAAW,CAAC,CAAC,GAAGH,QAAJ,EAAcS,IAAd,CAAD,CAAX,CAXoC,CAatC;AACA;AACA;AACC,GAhBD,CArBmB,CAuCnB;;;AACA,QAAMQ,WAAW,GAAIhB,OAAD,IAAa;AAC/BiB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBlB,OAApB;AACD,GAFD,CAxCmB,CA4CnB;;;AACA,QAAMmB,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClC,UAAMb,KAAK,CAAE,kCAAiCa,EAAG,EAAtC,EAAyC;AAClDT,MAAAA,MAAM,EAAE;AAD0C,KAAzC,CAAX;AAIAT,IAAAA,WAAW,CAACH,QAAQ,CAACsB,MAAT,CAAiBrB,OAAD,IAAaA,OAAO,CAACoB,EAAR,KAAeA,EAA5C,CAAD,CAAX;AACD,GAND;;AAQE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEV;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEX,QAApB;AAA8B,MAAA,QAAQ,EAAEoB,aAAxC;AAAuD,MAAA,QAAQ,EAAEH;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3DD;;GAAMf,I;;KAAAA,I;AA6DN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect, createContext } from \"react\";\r\nimport React from 'react';\r\nimport './styles/Main.css'\r\nimport Projects from './Projects'\r\nimport Form from './Form'\r\n\r\nconst MyContext = createContext({projects:[], project: null})\r\n\r\nconst Main = () => {\r\n  const [projects, setProjects] = useState([]) \r\n\r\n  useEffect(() => {\r\n    const getProjects = async () => {\r\n      const projectsFromServer = await fetchProjects()\r\n      setProjects(projectsFromServer)\r\n    }\r\n\r\n    getProjects()\r\n  }, [])\r\n\r\n// Fetch Projects\r\nconst fetchProjects = async () => {\r\n  const res = await fetch('http://localhost:5000/projects')\r\n  const data = await res.json()\r\n\r\n  return data\r\n}\r\n\r\n// Add project\r\nconst addProject = async (project) => {\r\n  const res = await fetch ('http://localhost:5000/projects', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(project)\r\n  })\r\n\r\n  const data = await res.json()\r\n\r\n  setProjects([...projects, data])\r\n\r\n//  const id = Math.floor(Math.random() * 10000) + 1\r\n//  const newProject =  { id, ...project }\r\n//  setProjects([...projects, newProject])\r\n}\r\n\r\n// Edit project\r\nconst editProject = (project) => {\r\n  console.log(\"edit\", project)\r\n}\r\n\r\n// Delete project\r\nconst deleteProject = async (id) => {\r\n  await fetch(`http://localhost:5000/projects/${id}`, {\r\n    method: 'DELETE'\r\n  })\r\n\r\n  setProjects(projects.filter((project) => project.id !== id))\r\n}\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n        <Form onAdd={addProject}/>\r\n        <Projects projects={projects} onDelete={deleteProject} onChange={editProject}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}